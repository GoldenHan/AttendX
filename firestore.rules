
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Users Collection:
    // - Allow read if user is authenticated.
    // - Allow create if user is signing up (specific logic usually handled by secure backend or cloud functions for initial admin).
    // - Allow update by the user themselves or by an admin.
    // - Allow delete by an admin (requires re-authentication, usually handled by backend).
    match /users/{userId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null; // More specific rules might be needed for signup security
      allow update: if request.auth.uid == userId || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
      allow delete: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Students Collection: (Assuming 'students' are managed by admins/teachers)
    // - Admins/teachers can read, create, update, delete student records.
    // - Students might be able to read their own record (if applicable, based on auth.uid matching student.uid).
    match /students/{studentId} {
      allow read: if request.auth != null && (
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin' ||
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'teacher' ||
        (exists(/databases/$(database)/documents/students/$(studentId)) && resource.data.uid == request.auth.uid) // If students have UIDs
      );
      allow create, update, delete: if request.auth != null && (
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin' ||
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'teacher'
      );
    }

    // Groups Collection:
    // - Admins/teachers can read, create, update, delete groups.
    match /groups/{groupId} {
      allow read: if request.auth != null; // All authenticated can read group info
      allow create, update, delete: if request.auth != null && (
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin' ||
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'teacher'
      );
    }

    // Sessions Collection:
    // - Admins/teachers can create/manage sessions.
    // - All authenticated users can read sessions (e.g., for QR code or selection).
    match /sessions/{sessionId} {
      allow read: if request.auth != null;
      allow create, update, delete: if request.auth != null && (
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin' ||
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'teacher'
      );
    }

    // AttendanceRecords Collection (for students):
    // - Admins/teachers can create/manage student attendance.
    // - Students might read their own records.
    match /attendanceRecords/{recordId} {
      allow read: if request.auth != null; // Simplification, refine if needed
      allow create, update, delete: if request.auth != null && (
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin' ||
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'teacher'
      );
    }

    // AppConfiguration Collection (e.g., for gradingConfig):
    // - Only admins can read/write.
    match /appConfiguration/{configId} {
      allow read, write: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // TeacherAttendanceRecords Collection:
    // - Teachers can create their own attendance records.
    // - Admins can read/delete these records.
    match /teacherAttendanceRecords/{recordId} {
      allow read: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
      // TEMPORARILY SIMPLIFIED: Allow any authenticated user to create.
      allow create: if request.auth != null;
      // Original create rule for reference, will restore later:
      // allow create: if request.auth != null &&
      //                  request.auth.uid == request.resource.data.teacherId &&
      //                  get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'teacher' &&
      //                  get(/databases/$(database)/documents/users/$(request.auth.uid)).data.attendanceCode == request.resource.data.attendanceCodeUsed;
      allow delete: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
  }
}
